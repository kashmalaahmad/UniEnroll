<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Schedule - Course Registration System</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css" rel="stylesheet">
    <!-- Custom CSS -->
    <link href="/css/student.css" rel="stylesheet">
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <nav id="sidebar" class="col-md-3 col-lg-2 d-md-block bg-dark sidebar collapse">
                <div class="position-sticky pt-3">
                    <ul class="nav flex-column">
                        <li class="nav-item">
                            <a class="nav-link text-white" href="/student/dashboard">
                                <i class="bi bi-house-door me-2"></i>Overview
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-white" href="/student/courses">
                                <i class="bi bi-book me-2"></i>Course Registration
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link active text-white" href="/student/schedule">
                                <i class="bi bi-calendar3 me-2"></i>My Schedule
                            </a>
                        </li>
                        <li class="nav-item mt-3">
                            <a class="nav-link text-white" href="#" id="logoutBtn">
                                <i class="bi bi-box-arrow-right me-2"></i>Logout
                            </a>
                        </li>
                    </ul>
                </div>
            </nav>

            <!-- Main content -->
            <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
                <div id="content">
                    <h2 class="mt-4">My Schedule</h2>
                    <div class="row mt-4">
                        <div class="col-12">
                            <div class="card">
                                <div class="card-body">
                                    <div class="table-responsive">
                                        <table class="table table-bordered">
                                            <thead>
                                                <tr>
                                                    <th>Time</th>
                                                    <th>Monday</th>
                                                    <th>Tuesday</th>
                                                    <th>Wednesday</th>
                                                    <th>Thursday</th>
                                                    <th>Friday</th>
                                                    <th>Saturday</th>
                                                </tr>
                                            </thead>
                                            <tbody id="scheduleTable">
                                                <!-- Schedule will be loaded dynamically -->
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </main>
        </div>
    </div>

    <!-- Toast Container -->
    <div class="toast-container position-fixed bottom-0 end-0 p-3"></div>

    <!-- Loading Spinner -->
    <div id="loadingSpinner" class="spinner-overlay d-none">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Check for authentication
        const token = localStorage.getItem('studentToken');
        if (!token) {
            window.location.href = '/student/login';
            throw new Error('No token found');
        }

        // Add token to all fetch requests
        async function fetchWithAuth(url, options = {}) {
            const token = localStorage.getItem('studentToken');
            if (!token) {
                window.location.href = '/student/login';
                throw new Error('No token found');
            }

            const headers = new Headers({
                'Authorization': `Bearer ${token}`,
                'Content-Type': 'application/json'
            });

            try {
                const response = await fetch(url, {
                    method: options.method || 'GET',
                    headers: headers,
                    body: options.body ? JSON.stringify(options.body) : undefined
                });

                if (response.status === 401 || response.status === 403) {
                    localStorage.removeItem('studentToken');
                    localStorage.removeItem('student');
                    document.cookie = 'studentToken=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';
                    window.location.href = '/student/login';
                    return null;
                }

                return response;
            } catch (error) {
                console.error('Fetch error:', error);
                throw error;
            }
        }

        // Show/hide loading spinner
        function toggleLoadingSpinner(show) {
            const spinner = document.getElementById('loadingSpinner');
            if (show) {
                spinner.classList.remove('d-none');
            } else {
                spinner.classList.add('d-none');
            }
        }

        // Load schedule data
        async function loadScheduleData() {
    toggleLoadingSpinner(true);
    try {
        const response = await fetchWithAuth('/api/student/schedule');
        if (!response) return;

        const responseData = await response.json();
        
        // Handle different response formats
        const data = Array.isArray(responseData) ? responseData : 
            (responseData.courses || responseData.data || []);
        
        const scheduleTable = document.getElementById('scheduleTable');

        // Define time slots
        const timeSlots = [
            '9:00 AM - 10:00 AM',
            '10:00 AM - 11:00 AM',
            '11:00 AM - 12:00 PM',
            '12:00 PM - 1:00 PM',
            '1:00 PM - 2:00 PM',
            '2:00 PM - 3:00 PM',
            '3:00 PM - 4:00 PM',
            '4:00 PM - 5:00 PM'
        ];

        // Create schedule table rows
        scheduleTable.innerHTML = timeSlots.map(time => {
            const row = document.createElement('tr');
            row.innerHTML = `<td>${time}</td>`;
            
            // Add cells for each day
            for (let day = 1; day <= 6; day++) {
                const courses = Array.isArray(data) ? data.filter(course => {
                    const schedule = course.schedule;
                    return schedule && schedule.day === day && schedule.time === time;
                }) : [];

                if (courses.length > 0) {
                    row.innerHTML += `
                        <td class="bg-primary text-white">
                            ${courses.map(course => `
                                <div>${course.courseCode}</div>
                                <div>${course.courseName}</div>
                            `).join('<hr class="my-1">')}
                        </td>
                    `;
                } else {
                    row.innerHTML += '<td></td>';
                }
            }

            return row.outerHTML;
        }).join('');
    } catch (error) {
        console.error('Schedule error:', error);
        showToast('Error loading schedule', 'danger');
    } finally {
        toggleLoadingSpinner(false);
    }
}
        // Show toast notification
        function showToast(message, type = 'success') {
            const toastContainer = document.querySelector('.toast-container');
            const toast = document.createElement('div');
            toast.className = `toast align-items-center text-white bg-${type} border-0`;
            toast.setAttribute('role', 'alert');
            toast.setAttribute('aria-live', 'assertive');
            toast.setAttribute('aria-atomic', 'true');
            
            toast.innerHTML = `
                <div class="d-flex">
                    <div class="toast-body">
                        ${message}
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                </div>
            `;
            
            toastContainer.appendChild(toast);
            const bsToast = new bootstrap.Toast(toast);
            bsToast.show();
            
            toast.addEventListener('hidden.bs.toast', () => {
                toast.remove();
            });
        }

        // Logout handler
        document.getElementById('logoutBtn').addEventListener('click', (e) => {
            e.preventDefault();
            localStorage.removeItem('studentToken');
            localStorage.removeItem('student');
            document.cookie = 'studentToken=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';
            window.location.href = '/student/login';
        });

        // Load initial data
        loadScheduleData();
    </script>
</body>
</html> 